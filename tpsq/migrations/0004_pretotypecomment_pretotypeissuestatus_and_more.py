# Generated by Django 5.2.5 on 2025-08-30 20:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("tpsq", "0003_pretotypeanalytics_pretotypesession_pretotypeissue_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="PretotypeComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.TextField(help_text="Comment text content", max_length=1000),
                ),
                (
                    "commenter_name",
                    models.CharField(
                        blank=True,
                        help_text="Display name for commenter",
                        max_length=100,
                    ),
                ),
                (
                    "commenter_type",
                    models.CharField(
                        choices=[
                            ("citizen", "Citizen"),
                            ("government", "Government Official"),
                            ("verified", "Verified Organization"),
                            ("anonymous", "Anonymous"),
                        ],
                        default="citizen",
                        help_text="Type of commenter",
                        max_length=20,
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(
                        default=True,
                        help_text="Whether comment is approved for display",
                    ),
                ),
                (
                    "is_flagged",
                    models.BooleanField(
                        default=False,
                        help_text="Whether comment has been flagged for review",
                    ),
                ),
                (
                    "is_government_response",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is an official government response",
                    ),
                ),
                (
                    "upvotes",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of upvotes"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address for moderation", null=True
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        help_text="Issue being commented on",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="tpsq.pretotypeissue",
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent comment if this is a reply",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="tpsq.pretotypecomment",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        help_text="Session of commenter",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="tpsq.pretotypesession",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pretotype Comment",
                "verbose_name_plural": "Pretotype Comments",
                "db_table": "pretotype_comments",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["issue", "-created_at"],
                        name="pretotype_c_issue_i_b47e3f_idx",
                    ),
                    models.Index(
                        fields=["is_approved", "-created_at"],
                        name="pretotype_c_is_appr_abe52b_idx",
                    ),
                    models.Index(
                        fields=["is_government_response", "-created_at"],
                        name="pretotype_c_is_gove_5d3731_idx",
                    ),
                    models.Index(
                        fields=["parent_comment"], name="pretotype_c_parent__93ce39_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PretotypeIssueStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("reported", "Reported"),
                            ("acknowledged", "Acknowledged"),
                            ("investigating", "Under Investigation"),
                            ("in_progress", "Work in Progress"),
                            ("resolved", "Resolved"),
                            ("duplicate", "Duplicate"),
                            ("rejected", "Not Actionable"),
                        ],
                        help_text="New status",
                        max_length=20,
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        help_text="Optional status update message",
                        max_length=500,
                    ),
                ),
                (
                    "updated_by",
                    models.CharField(
                        help_text="Who provided this update (government dept, etc.)",
                        max_length=200,
                    ),
                ),
                (
                    "evidence_image_url",
                    models.URLField(
                        blank=True,
                        help_text="Optional image showing progress/resolution",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "issue",
                    models.ForeignKey(
                        help_text="Issue being updated",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_updates",
                        to="tpsq.pretotypeissue",
                    ),
                ),
            ],
            options={
                "verbose_name": "Issue Status Update",
                "verbose_name_plural": "Issue Status Updates",
                "db_table": "pretotype_issue_status",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["issue", "-created_at"],
                        name="pretotype_i_issue_i_91562b_idx",
                    ),
                    models.Index(
                        fields=["status", "-created_at"],
                        name="pretotype_i_status_c02fda_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PretotypeReaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reaction_type",
                    models.CharField(
                        choices=[
                            ("like", "üëç Like"),
                            ("support", "ü§ù Support"),
                            ("me_too", "üôã Me Too"),
                            ("heart", "‚ù§Ô∏è Care"),
                            ("angry", "üò† Angry"),
                            ("sad", "üò¢ Sad"),
                        ],
                        help_text="Type of reaction",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "issue",
                    models.ForeignKey(
                        help_text="Issue being reacted to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="tpsq.pretotypeissue",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        help_text="Session of person reacting",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="tpsq.pretotypesession",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pretotype Reaction",
                "verbose_name_plural": "Pretotype Reactions",
                "db_table": "pretotype_reactions",
                "indexes": [
                    models.Index(
                        fields=["issue", "reaction_type"],
                        name="pretotype_r_issue_i_56a2b4_idx",
                    ),
                    models.Index(
                        fields=["-created_at"], name="pretotype_r_created_ceb461_idx"
                    ),
                ],
                "unique_together": {("issue", "session")},
            },
        ),
    ]
